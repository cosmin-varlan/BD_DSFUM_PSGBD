<p>= Pachete predefinite =</p>

<p>http://docstore.mik.ua/orelly/oracle/bipack/ch06_02.htm</p>

<p>In unul din laboratoarele anterioare ati creat un pachet ce continea o serie de functii si proceduri ce aveau un acelasi tel. In Oracle exista cateva pachete predefinite pe care le puteti utiliza pentru a va usura munca (deja ati folosit pachetul DBMS_OUTPUT si probabil cea mai populara functie de acolo: PUT_LINE). Iata cateva alte pachete disponibile pentru PLSQL (o lista completa puteti gasi la https://docs.oracle.com/database/121/ARPLS/intro.htm#ARPLS65018):</p>

<ul>
<li> UTL_FILE - permite lucrul cu fisiere stocate direct pe HDDul serverului (citirea/scrierea de fisiere).</li>
<li> UTL_HTTP - permite accesarea paginilor html din PLSQL utilizand protocolul http (din pacate cam putine situri care sa mai foloseasca acest protocol nesecurizat).</li>
<li> [https://profs.info.uaic.ro/~bd/wiki/index.php/UTL_TCP UTL_TCP] - permite comunicarea prin intermediul protocolului TCP/IP cu diverse aplicatii.</li>
<li> [https://profs.info.uaic.ro/~bd/wiki/index.php/UTL_SMTP UTL_SMTP] - permite trimiterea de emailuri din PLSQL</li>
<li> DBMS_SQL - permite accesarea bazei de date utilizand SQL Dinamic.</li>
<li> DBMS_OUTPUT - permite afisarea de informatii in consola Oracle si pentru acest motiv este util in debugging - in mod uzual nu ar trebui folosita pentru ca serverul de bazxe de date este accesat nu prin intermediul unei console ci mai degraba prin intermediul unei conexiuni si a unei cereri ce se executa prin acea conexiune;</li>
</ul>


<p>etc. <!--(<span style="color:red">Daca din lista de mai sus gasiti altele care vi se par interesante, puteti crea pagini de wiki pentru 10pt - o pagina realizata "ca la carte" - ma refer la lista din linkul de mai sus, nu la lista scrisa aici pe pagina</span>).--></p>

<h2> UTL_FILE </h2>

<p>Pachetul UTL_FILE este definit in fisierul utlfile.sql (pe care il puteti gasi in directorul in care ati instalat Oracle, intr-o secctiune de administrare). El este executat o singura data la instalarea serverului Oracle din contul de administrare si doar administratorului i se permite accesul la functionalitatile acestuia - evident daca acesta nu permite si unui alt utilizator sa aiba acces cu ajutorul unui grant: <span style="color:blue">GRANT EXECUTE ON UTL_FILE TO STUDENT;</span> (pentru contul STUDENT).</p>

<p><!--</p>
<p>Lucrul cu HDDul este o treaba destul de sensibila - daca i s-ar permite oricui sa aiba acces oriunde atunci probabil ca ar putea aparea scripturi care sa se ruleze pe server, create din aplicatii PLSQL si care sa permita accesul la diverse date sensibile existente acolo. Din acest motiv, pentru a avea acces la spatiul de pe HDD trebuie sa specificati in clar un director in care se vor putea scrie fisierele de catre aplicatia PLSQL sau de unde se vor putea citi aceste fisiere. Acest lucru se face adaugand o noua linie in fisierul init.ora (cel din directorul dbs). Linia pe care am adaugat-o eu este "UTL_FILE_DIR = d:\Cosmin\director" (fara ghilimele). Daca doriti accesul si in alte directoare, puteti sa repetati linia pentru alte locatii (sau chiar "utl_file_dir = *" daca va simtiti norocosi). [reporniti baza de date dupa acest pas - vedeti in start->Oracle->stop/start]</p>



<p>--></p>

<p>Creati un director "<span style="color:blue">D:\STUDENT</span>" - el va fi asociat unui identificator pe care il veti folosi in scripturile voastre (la pasul urmator se face aceasta asociere).</p>

<p>Revenind la contul de administrare, pentru a permite access unui utilizator sa scrie pe HDD, trebuie ca acel utilizator sa poata sa isi creeze o legatura logica intre directorul fizic si un identificator. Dupa ce aceasta legatura a fost creata, utilizatorul va folosi doar identificatorul pentru a accesa continutul directorului. Tot din contul de administrare executati asadar comanda <span style="color:blue">GRANT CREATE ANY DIRECTORY TO STUDENT;</span></p>

<p>Acum, din contul STUDENT, va trebui sa creati legatura logica de care povesteam mai inainte. Directorul vizat va fi "D:\STUDENT". Pentru aceasta, creati directorul STUDENT (case sensitive), dupa care, din contul student executati comanda <span style="color:blue">CREATE OR REPLACE DIRECTORY MYDIR as 'D:\STUDENT';</span></p>

<p>Si ca si cum toate precautiile nu sunt inca suficiente, trebuie sa reveniti in contul de administrator si sa ii permiteti utilizatorului STUDENT sa citeasca sau sa scrie in directorul tocmai creat: <span style="color:blue">GRANT READ,WRITE ON DIRECTORY MYDIR TO STUDENT;</span></p>

<p>Daca ati reusit sa faceti toti pasii de mai sus, ar trebui ca urmatorul cod sa creeze un fisier in care sa scrie literele "abcdefg".</p>

<pre><code class="language-sql">DECLARE
  v_fisier UTL_FILE.FILE_TYPE;
BEGIN
  v_fisier:=UTL_FILE.FOPEN('MYDIR','myfile.txt','W');
  UTL_FILE.PUTF(v_fisier,'abcdefg');
  UTL_FILE.FCLOSE(v_fisier);
END;

<p>Pentru a vedea toate functiile si procedurile pe care le puteti utiliza din UTL_FILE puteti executa comanda <span style="color:blue">DESC UTL_FILE;</SPAN></p>

<p>Pentru a citi datele din fisier se deschide in modul de citire (se inlocuieste W cu R in functia de deschidere a fisierului) dupa care citirea efectiva se realizeaza cu get_line:</p>

<pre><code class="language-sql">set serveroutput on;
DECLARE
  v_fisier UTL_FILE.FILE_TYPE;
  v_sir VARCHAR2(50);
BEGIN
  v_fisier:=UTL_FILE.FOPEN('MYDIR','myfile.txt','R');
  UTL_FILE.GET_LINE(v_fisier,v_sir);
  DBMS_OUTPUT.PUT_LINE(v_sir);
  UTL_FILE.FCLOSE(v_fisier);
END;


<p>Atentie: utilizatorii de linux trebuie sa se asigure ca au drepturi de citire/scriere asupra fisierului respectiv (chmod...)</p>

<h2> Exercitiu (5pt)</h2>
<p>Creati un script PLSQL care sa exporte pe calculatorul votru tabela note intr-un fisier de tip csv (Comma Separated Values) si un al doilea script care plecand de la un csv, sa recreeze tabela note. Intre cele doua operatii se va executa "delete from note". </p>

<p>Nota: Exportarea / importarea se va face NUMAI utilizand UTL_FILE.</p>

<p>Pentru cei ce doresc sa utilizeze expresii regulate pentru procesarea fisierului: https://profs.info.uaic.ro/~bd/wiki/index.php/Expresii_regulate</p>

<h2> Tema (2pt)</h2>
<p>Construiti un XML cu datele din "studenti JOIN note JOIN cursuri" in care sa fie stocat catalogul si parsati-l cu SAX sau DOM + afisati-l intr-o aplicatie facuta intr-un limbaj ales de voi.</p>

<p>Nota: Exportarea se va face utilizand UTL_FILE. </p>


<p><!--</p>
<h2> Exercitii </h2>


<p>1. (3pt) DB exporter:</p>

<p>Creati o procedura stocata care sa exporte tabelele studenti si prieteni pentru utilizatorul curent intr-un format la alegere (mai putin SQL - adica fara sa generati inserturi care ar popula automat tabelele).</p>


<p>2. (4pt) Table importer:</p>

<p>Creati o procedura stocata care sa repopuleze tabelele studenti si prieteni dupa ce acestea au fost sterse (tabelele vor fi create dinainte). Aveti grija la constrangerile de unicitate (vom modifica IDuri in fisierele text si vom observa daca ati tratat exceptiile).</p>

<p>3. (3pt) Realizati o aplicatie PHP care sa se conecteze la un server de baze de date Oracle si exemplificati prin intermediul acestei aplicatii un atac de tipul SQL injection.</p>
<p>(PHPul adaugat ca si comenatriu la sfarsitul fisierului care creeaza baza de date si inseareaza informatii in ea; in cazul in care folositi tabelele de la laborator (studenti, note etc; trimiteti tot un fisier cu extensia sql in care aveti codul php comentat - da, stiu, sunt ciudat)</p>
<p>--></p>
